# config for -> python ./experiments/algorithms/beyesian_search.py

experiment_name:        beyesian_search

# [trained model folder inside ./experiments/results/trained_models/ (make sure that folder name starts with 'PPOTrainer' or 'SACTrainer')]
load_agent_name:        PPOTrainer_highway_environment:highway-environment-v0_2022-09-08_10-55-47es7uo_wq

checkpoint_number:      50      # [trained model saved checkpoint number]

resume:                 False
num_samples:            8192
max_eps_length:         250

search_space:
    distance: 
        min:            10.0    # [m]
        max:            120.0   # [m]
        steps:          2       # [discrete number]
    
    velocity:
        min:            10.0    # [m/s]
        max:            40.0    # [m/s]
        steps:          2       # [discrete number]

ray_tune_resources:
    cpu:                2       # [number of CPUs to allocate to the trial -> total cpu allocation = cpu * (1/gpu)]
    gpu:                0.2     # [number of GPUs to allocate to the trial]

metric:                 episode_min_ttc  # [str metric to optimize (should be in tune.report() arguments)]
mode:                   min     # [str objective to apply ([maximize -> max] or [minimize -> min])]

seed:                   12      # [int random state seed]
random_search_steps:    100     # [necessary to avoid initial local overfitting of the Bayesian process]

use_custom_torch_model: false   # [true: use custom model in ./experiments/models/ folder]